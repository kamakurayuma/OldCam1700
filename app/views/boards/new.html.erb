<div class="container">
  <div class="row">
    <div class="col-lg-8 offset-lg-2">
    <h1 class="text-center" style="font-size: 24px; font-weight: 330; margin-bottom: 40px;">新 規 投 稿</h1> 

      <%= form_with model: @board, class: "new_board" do |f| %>

         <%= render 'shared/error_messages', object: f.object %>
        
        <div class="mb-5 row justify-content-center position-relative">
            <div class="col-sm-2">
            <span class="required-label">必須</span>
                <%= f.label :title, "タ イ ト ル", class: "form-label", style: "font-size: 17px; font-weight: 300;" %>
            </div>
            <div class="col-sm-8">
            <%= f.text_field :title, class: "form-control" %>
            </div>
        </div>
        

        <div class="mb-5 row justify-content-center position-relative">
        <div class="col-sm-2 col-md-2">
          <span class="required-label">必須</span>
          <%= f.label :camera_make, "カメラの詳細", class: "form-label", style: "font-size: 17px; font-weight: 300;" %>
        </div>
        <div class="col-sm-8 col-md-8">
          <div class="row">
            <!-- メーカー選択 -->
            <div class="col-sm-6">
            <%= f.select :camera_make, 
            [["Canon", "Canon"], ["Nikon", "Nikon"], ["Sony", "Sony"], ["Panasonic", "Panasonic"], 
             ["Olympus", "Olympus"], ["Fujifilm", "Fujifilm"], ["Ricoh", "Ricoh"], ["Casio", "Casio"], 
             ["Leica", "Leica"], ["Yashica", "Yashica"], ["Konica", "Konica"], ["Minolta", "Minolta"],
             ["不明", "不明"], ["その他", "その他"]],
            { prompt: "メーカーを選択してください" },
            class: "form-control", id: "camera_make_select" %>
          
      
              <!-- "その他"用の入力フィールド -->
              <div id="custom_make_input" style="display: none; margin-top: 10px;">
                <%= f.text_field :custom_camera_make, placeholder: "メーカー名を入力してください", class: "form-control", id: "custom_camera_make" %>
              </div>
          </div>
      
            <!-- 機種入力 -->
            <div class="col-sm-6">
              <%= f.text_field :camera_model, class: "form-control", id: "camera_model_input", placeholder: "機種", autocomplete: "off" %>
              <ul id="camera_model_suggestions" class="suggestions-list"></ul>
            </div>
          </div>
        </div>
      </div>
      

           
      <div class="mb-5 row justify-content-center position-relative">
      <div class="col-sm-2">
        <span class="required-label">必須</span>
        <%= f.label :board_image, "写 真 ・ 動 画", class: "form-label", style: "font-size: 17px; font-weight: 300;" %>
      </div>
      <div class="col-sm-8">
        <%= f.file_field :board_image, class: "form-control", accept: 'image/*,video/*', id: 'board_image_input' %>
        <% if @board.board_image.present? %>
          <div class="mt-3">
            <%= image_tag @board.board_image.url, class: 'img-fluid' %>
          </div>
        <% end %>

    </div>
    
    <!-- ここに画像のプレビューを表示 -->
    <div id="preview" class="mt-3" style="margin-bottom: 50px;"></div>

        <div class="mb-5 row justify-content-center">
            <div class="col-sm-2">
                <%= f.label :body, "感 想", class: "form-label", style: "font-size: 17px; font-weight: 300;" %>
            </div>
            <div class="col-sm-8">
                <%= f.text_area :body, class: "form-control", rows: "4" %>
            </div>
        </div>

        
        <div class="row mt-5">
          <div class="col text-center mb-4">
            <%= f.submit "投稿", class: "btn btn-primary toukou" %>
          </div>
        </div>
        <% end %>      
    </div>
  </div>
</div>


<script>
  // 写真・動画のプレビュー表示と解像度チェック
  document.getElementById('board_image_input').addEventListener('change', function(event) {
    const preview = document.getElementById('preview');
    preview.innerHTML = ''; // 既存のプレビューをクリア
    const file = event.target.files[0];
    const maxResolution = 17000000; // 最大解像度 (1700万画素)

    if (file) {
      const reader = new FileReader();
      reader.onload = function(e) {
        const fileUrl = e.target.result;
        let previewElement;

        if (file.type.startsWith('image/')) {
          previewElement = document.createElement('img');
          previewElement.src = fileUrl;
          previewElement.classList.add('img-fluid');

          // 画像の解像度チェック
          const img = new Image();
          img.onload = function() {
            const resolution = img.width * img.height;
            if (resolution > maxResolution) {
              alert("画像の解像度が1700万画素を超えています。別の画像を選択してください。");
              preview.innerHTML = ''; // 画像プレビューを削除
              document.getElementById('board_image_input').value = ''; // ファイル入力をリセット
            } else {
              preview.appendChild(previewElement); // プレビューを表示
            }
          };
          img.src = fileUrl;
        } else if (file.type.startsWith('video/')) {
          previewElement = document.createElement('video');
          previewElement.src = fileUrl;
          previewElement.classList.add('img-fluid');
          previewElement.controls = true;

          // 動画の解像度チェック
          const video = document.createElement('video');
          video.onloadedmetadata = function() {
            const width = video.videoWidth;
            const height = video.videoHeight;
            const resolution = width * height;
            if (resolution > maxResolution) {
              alert("動画の解像度が1700万画素を超えています。別の動画を選択してください。");
              preview.innerHTML = ''; // 動画プレビューを削除
              document.getElementById('board_image_input').value = ''; // ファイル入力をリセット
            } else {
              preview.appendChild(previewElement); // プレビューを表示
            }
          };
          video.src = fileUrl;
        }
      };
      reader.readAsDataURL(file);
    }
  });

  // メーカー選択で「その他」を選んだ場合に入力フィールド表示
  document.getElementById('camera_make_select').addEventListener('change', function(event) {
    const customMakeInput = document.getElementById('custom_make_input');
    customMakeInput.style.display = event.target.value === 'その他' ? 'block' : 'none';
  });

  // 投稿失敗時に「その他」の入力フィールドを維持
  window.onload = function() {
    const cameraMakeSelect = document.getElementById('camera_make_select');
    const customMakeInput = document.getElementById('custom_make_input');
    if (cameraMakeSelect.value === 'その他') {
      customMakeInput.style.display = 'block';
    }
  };

  // カメラモデルのリスト
  const cameraModels = [
    'T4', 'DiMAGE X1', 'DiMAGE 7i', 'XA', 'GR1v', 'S95', 'P7000', 'DMC-LX100',
    'Stylus 1', 'GR Digital IV', 'EX-ZR1000', 'A620', 'DiMAGE Xt', 'DSC-T10',
    'A590 IS', 'DSC-W70', 'DiMAGE 5', 'SD700 IS', 'DSC-T50', '5900', 'G5', '5700',
    'DiMAGE A1', 'S230', 'DiMAGE Z3', 'G6', 'DiMAGE Z1', 'SD400', 'DSC-T1', 'A520',
    '8800', 'DiMAGE Z5', 'S3 IS', 'DSC-W50', 'A75', '7900', 'A550', 'DiMAGE 7',
    'FinePix F30', 'PowerShot G7', 'Coolpix P500', 'Cyber-shot DSC-H5'
  ];

  // 五十音順に並べ替え
  const sortedCameraModels = cameraModels.sort();

  // 新しい機種を候補に追加する関数
  function addNewCameraModel(newModel) {
    if (!cameraModels.includes(newModel)) {
      cameraModels.push(newModel);
      cameraModels.sort(); // 新しい機種を追加後、リストを再ソート
    }
    console.log(cameraModels); // 追加された後のカメラリストを確認
  }

  // オートコンプリートリストを更新する関数
  function updateCameraModelSuggestions() {
    const inputValue = document.getElementById('camera_model_input').value.toLowerCase();
    const suggestionsList = document.getElementById('camera_model_suggestions');
    suggestionsList.innerHTML = ''; // 前回の候補をクリア

    if (inputValue) {
      const filteredModels = cameraModels.filter(model => model.toLowerCase().includes(inputValue));
      filteredModels.forEach(model => {
        const listItem = document.createElement('li');
        listItem.textContent = model;
        listItem.classList.add('suggestion-item');
        listItem.addEventListener('click', function() {
          document.getElementById('camera_model_input').value = model;
          suggestionsList.innerHTML = ''; // クリックで候補を消す
        });
        suggestionsList.appendChild(listItem);
      });

      // 「不明」の候補を一番下に追加
      const unknownOption = document.createElement('li');
      unknownOption.textContent = '不明';
      unknownOption.classList.add('suggestion-item');
      unknownOption.addEventListener('click', function() {
        document.getElementById('camera_model_input').value = '不明';
      });
      suggestionsList.appendChild(unknownOption);
    }
  }

  // 機種入力のオートコンプリート機能
  document.getElementById('camera_model_input').addEventListener('input', function(event) {
    updateCameraModelSuggestions();
  });

  // 新しい機種を追加するボタンをクリックしたときの処理
  const addButton = document.getElementById('addCameraModelButton');
  addButton.addEventListener('click', () => {
    const newModel = document.getElementById('newModelInput').value;
    addNewCameraModel(newModel);  // 新しい機種を追加
    updateCameraModelSuggestions(); // 新しい機種を追加後、候補リストを更新
  });
</script>







<style>
/* サジェストリストのスタイル */
#camera_model_suggestions {
  list-style-type: none;
  padding: 0;
  margin: 0;
  max-height: 200px; /* 最大高さ */
  overflow-y: auto; /* スクロール可能 */
  border: none; /* 初期状態で枠線を消す */
  background-color: #fff;
  position: absolute;
  z-index: 1000;
  width: 34%; /* 横幅を60%に設定して狭める */
}

/* サジェストアイテムのスタイル */
.suggestion-item {
  padding: 8px;
  border: 1px solid #ccc;
  cursor: pointer;
  background-color: #fff;
  width: 100%; /* アイテムの横幅をリストと同じに */
}

/* アイテムホバー時のスタイル */
.suggestion-item:hover {
  background-color: #f0f0f0;
}
</style>
